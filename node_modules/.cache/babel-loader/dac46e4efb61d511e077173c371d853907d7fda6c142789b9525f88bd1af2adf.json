{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lpana\\\\OneDrive\\\\Documents\\\\gameIterations\\\\scoreUpdate\\\\src\\\\components\\\\MoralDescriptors.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSpring, useTransition, animated as a } from \"react-spring\";\nimport \"./styles/MoralDescriptors.css\";\nimport authorityPositive from \"../images/AuthorityPositive.jpg\";\nimport authorityNegative from \"../images/AuthorityNegative.jpg\";\nimport fairPositive from \"../images/FairPositive.jpg\";\nimport fairNegative from \"../images/FairNegative.jpg\";\nimport loyaltyPositive from \"../images/LoyaltyPositive.jpg\";\nimport loyaltyNegative from \"../images/LoyaltyNegative.jpg\";\nimport harmNegative from \"../images/HarmNegative.jpg\";\nimport harmPositive from \"../images/HarmPositive.jpg\";\nimport purityPositive from \"../images/PurityPositive.jpg\";\nimport purityNegative from \"../images/PurityNegative.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoralDescriptors = _ref => {\n  _s();\n  let {\n    moralDescriptors,\n    handleNextCards,\n    setMoralChoices,\n    selectedCard\n  } = _ref;\n  const [currentDescriptorIndex, setCurrentDescriptorIndex] = useState(0);\n  const [selectedImages, setSelectedImages] = useState({\n    high: null,\n    low: null\n  });\n  const handleImageSelection = selectedImage => {\n    if (selectedImage === \"positive\") {\n      setSelectedImages({\n        ...selectedImages,\n        high: moralDescriptors[currentDescriptorIndex]\n      });\n    } else if (selectedImage === \"negative\") {\n      setSelectedImages({\n        ...selectedImages,\n        low: moralDescriptors[currentDescriptorIndex]\n      });\n    }\n    if (currentDescriptorIndex === moralDescriptors.length - 1) {\n      handleNextCards();\n    } else {\n      setCurrentDescriptorIndex(currentDescriptorIndex + 1);\n    }\n  };\n  const getImageSource = descriptor => {\n    switch (descriptor) {\n      case \"Authority\":\n        return {\n          high: authorityHigh,\n          low: authorityLow\n        };\n      case \"Fair\":\n        return {\n          high: fairHigh,\n          low: fairLow\n        };\n      default:\n        return {\n          high: \"\",\n          low: \"\"\n        };\n    }\n  };\n  const currentDescriptor = moralDescriptors[currentDescriptorIndex];\n  const imageSources = getImageSource(currentDescriptor);\n\n  // setup transition for images\n  const transitions = useTransition(currentDescriptorIndex, {\n    from: {\n      opacity: 0,\n      transform: \"scale(0)\"\n    },\n    enter: {\n      opacity: 1,\n      transform: \"scale(1)\"\n    },\n    config: {\n      tension: 210,\n      friction: 20\n    }\n  });\n\n  // setup spring for button\n  const [buttonProps, setButtonProps] = useSpring(() => ({\n    scale: 1,\n    config: {\n      tension: 210,\n      friction: 20\n    }\n  }));\n  const handleButtonClick = selectedImage => {\n    setButtonProps({\n      scale: 1.1\n    });\n    handleImageSelection(selectedImage);\n    setMoralChoices(prevChoices => ({\n      ...prevChoices,\n      [selectedCard.ID]: {\n        ...(prevChoices[selectedCard.ID] || {}),\n        [currentDescriptor]: selectedImage\n      }\n    }));\n\n    // Reset the button scale after a short period of time\n    setTimeout(() => setButtonProps({\n      scale: 1\n    }), 150);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moral-descriptors\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"How would you describe this technology?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: transitions((style, item) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(a.button, {\n            style: buttonProps,\n            onClick: () => handleButtonClick(\"high\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageSources.high,\n              alt: \"High\",\n              className: selectedImages.high === moralDescriptors[item] ? \"image-pop-up\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(a.button, {\n            style: buttonProps,\n            onClick: () => handleButtonClick(\"low\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageSources.low,\n              alt: \"Low\",\n              className: selectedImages.low === moralDescriptors[item] ? \"image-pop-up\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"unsure-button\",\n      onClick: () => handleImageSelection(\"unsure\"),\n      children: \"Unsure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(MoralDescriptors, \"ZZernErAHFQMTCswIh2heWJT4dg=\", false, function () {\n  return [useTransition, useSpring];\n});\n_c = MoralDescriptors;\nexport default MoralDescriptors;\nvar _c;\n$RefreshReg$(_c, \"MoralDescriptors\");","map":{"version":3,"names":["React","useState","useSpring","useTransition","animated","a","authorityPositive","authorityNegative","fairPositive","fairNegative","loyaltyPositive","loyaltyNegative","harmNegative","harmPositive","purityPositive","purityNegative","jsxDEV","_jsxDEV","Fragment","_Fragment","MoralDescriptors","_ref","_s","moralDescriptors","handleNextCards","setMoralChoices","selectedCard","currentDescriptorIndex","setCurrentDescriptorIndex","selectedImages","setSelectedImages","high","low","handleImageSelection","selectedImage","length","getImageSource","descriptor","authorityHigh","authorityLow","fairHigh","fairLow","currentDescriptor","imageSources","transitions","from","opacity","transform","enter","config","tension","friction","buttonProps","setButtonProps","scale","handleButtonClick","prevChoices","ID","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","item","button","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/components/MoralDescriptors.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpring, useTransition, animated as a } from \"react-spring\";\r\nimport \"./styles/MoralDescriptors.css\";\r\nimport authorityPositive from \"../images/AuthorityPositive.jpg\";\r\nimport authorityNegative from \"../images/AuthorityNegative.jpg\";\r\nimport fairPositive from \"../images/FairPositive.jpg\";\r\nimport fairNegative from \"../images/FairNegative.jpg\";\r\nimport loyaltyPositive from \"../images/LoyaltyPositive.jpg\";\r\nimport loyaltyNegative from \"../images/LoyaltyNegative.jpg\";\r\nimport harmNegative from \"../images/HarmNegative.jpg\";\r\nimport harmPositive from \"../images/HarmPositive.jpg\";\r\nimport purityPositive from \"../images/PurityPositive.jpg\";\r\nimport purityNegative from \"../images/PurityNegative.jpg\";\r\n\r\nconst MoralDescriptors = ({\r\n  moralDescriptors,\r\n  handleNextCards,\r\n  setMoralChoices,\r\n  selectedCard,\r\n}) => {\r\n  const [currentDescriptorIndex, setCurrentDescriptorIndex] = useState(0);\r\n  const [selectedImages, setSelectedImages] = useState({\r\n    high: null,\r\n    low: null,\r\n  });\r\n\r\n  const handleImageSelection = (selectedImage) => {\r\n    if (selectedImage === \"positive\") {\r\n      setSelectedImages({\r\n        ...selectedImages,\r\n        high: moralDescriptors[currentDescriptorIndex],\r\n      });\r\n    } else if (selectedImage === \"negative\") {\r\n      setSelectedImages({\r\n        ...selectedImages,\r\n        low: moralDescriptors[currentDescriptorIndex],\r\n      });\r\n    }\r\n\r\n    if (currentDescriptorIndex === moralDescriptors.length - 1) {\r\n      handleNextCards();\r\n    } else {\r\n      setCurrentDescriptorIndex(currentDescriptorIndex + 1);\r\n    }\r\n  };\r\n\r\n  const getImageSource = (descriptor) => {\r\n    switch (descriptor) {\r\n      case \"Authority\":\r\n        return {\r\n          high: authorityHigh,\r\n          low: authorityLow,\r\n        };\r\n      case \"Fair\":\r\n        return {\r\n          high: fairHigh,\r\n          low: fairLow,\r\n        };\r\n      default:\r\n        return {\r\n          high: \"\",\r\n          low: \"\",\r\n        };\r\n    }\r\n  };\r\n\r\n  const currentDescriptor = moralDescriptors[currentDescriptorIndex];\r\n  const imageSources = getImageSource(currentDescriptor);\r\n\r\n  // setup transition for images\r\n  const transitions = useTransition(currentDescriptorIndex, {\r\n    from: { opacity: 0, transform: \"scale(0)\" },\r\n    enter: { opacity: 1, transform: \"scale(1)\" },\r\n    config: { tension: 210, friction: 20 },\r\n  });\r\n\r\n  // setup spring for button\r\n  const [buttonProps, setButtonProps] = useSpring(() => ({\r\n    scale: 1,\r\n    config: { tension: 210, friction: 20 },\r\n  }));\r\n\r\n  const handleButtonClick = (selectedImage) => {\r\n    setButtonProps({ scale: 1.1 });\r\n    handleImageSelection(selectedImage);\r\n    setMoralChoices((prevChoices) => ({\r\n      ...prevChoices,\r\n      [selectedCard.ID]: {\r\n        ...(prevChoices[selectedCard.ID] || {}),\r\n        [currentDescriptor]: selectedImage,\r\n      },\r\n    }));\r\n\r\n    // Reset the button scale after a short period of time\r\n    setTimeout(() => setButtonProps({ scale: 1 }), 150);\r\n  };\r\n\r\n  return (\r\n    <div className=\"moral-descriptors\">\r\n      <h3>How would you describe this technology?</h3>\r\n      <div className=\"image-container\">\r\n        {transitions((style, item) => (\r\n          <>\r\n            <div className=\"image-wrapper\">\r\n              <a.button\r\n                style={buttonProps}\r\n                onClick={() => handleButtonClick(\"high\")}\r\n              >\r\n                <img\r\n                  src={imageSources.high}\r\n                  alt=\"High\"\r\n                  className={\r\n                    selectedImages.high === moralDescriptors[item]\r\n                      ? \"image-pop-up\"\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </a.button>\r\n            </div>\r\n            <div className=\"image-wrapper\">\r\n              <a.button\r\n                style={buttonProps}\r\n                onClick={() => handleButtonClick(\"low\")}\r\n              >\r\n                <img\r\n                  src={imageSources.low}\r\n                  alt=\"Low\"\r\n                  className={\r\n                    selectedImages.low === moralDescriptors[item]\r\n                      ? \"image-pop-up\"\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </a.button>\r\n            </div>\r\n          </>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"unsure-button\"\r\n        onClick={() => handleImageSelection(\"unsure\")}\r\n      >\r\n        Unsure\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoralDescriptors;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}