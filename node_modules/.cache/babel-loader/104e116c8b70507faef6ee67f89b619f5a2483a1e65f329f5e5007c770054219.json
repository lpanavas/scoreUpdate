{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lpana\\\\OneDrive\\\\Documents\\\\gameIterations\\\\scoreUpdate\\\\src\\\\components\\\\MoralDescriptors.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSpring, useTransition, animated as a } from \"react-spring\";\nimport \"./styles/MoralDescriptors.css\";\nimport authorityLow from \"../images/AuthorityLow/b15_p345_14.jpg\";\nimport authorityHigh from \"../images/AuthorityHigh/b15_p460_8.jpg\";\nimport fairLow from \"../images/FairLow/b10_p133_8.jpg\";\nimport fairHigh from \"../images/FairHigh/b11_p172_9.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoralDescriptors = _ref => {\n  _s();\n  let {\n    moralDescriptors,\n    handleNextCards\n  } = _ref;\n  const [currentDescriptorIndex, setCurrentDescriptorIndex] = useState(0);\n  const [selectedImages, setSelectedImages] = useState({\n    high: null,\n    low: null\n  });\n  const handleImageSelection = selectedImage => {\n    if (selectedImage === \"high\") {\n      setSelectedImages({\n        ...selectedImages,\n        high: moralDescriptors[currentDescriptorIndex]\n      });\n    } else if (selectedImage === \"low\") {\n      setSelectedImages({\n        ...selectedImages,\n        low: moralDescriptors[currentDescriptorIndex]\n      });\n    }\n    if (currentDescriptorIndex === moralDescriptors.length - 1) {\n      handleNextCards();\n    } else {\n      setCurrentDescriptorIndex(currentDescriptorIndex + 1);\n    }\n  };\n  const getImageSource = descriptor => {\n    switch (descriptor) {\n      case \"Authority\":\n        return {\n          high: authorityHigh,\n          low: authorityLow\n        };\n      case \"Fair\":\n        return {\n          high: fairHigh,\n          low: fairLow\n        };\n      default:\n        return {\n          high: \"\",\n          low: \"\"\n        };\n    }\n  };\n  const currentDescriptor = moralDescriptors[currentDescriptorIndex];\n  const imageSources = getImageSource(currentDescriptor);\n\n  // setup transition for images\n  const transitions = useTransition(currentDescriptorIndex, {\n    from: {\n      opacity: 0,\n      transform: \"scale(0)\"\n    },\n    enter: {\n      opacity: 1,\n      transform: \"scale(1)\"\n    },\n    config: {\n      tension: 210,\n      friction: 20\n    }\n  });\n\n  // setup spring for button\n  const [buttonProps, setButtonProps] = useSpring(() => ({\n    scale: 1,\n    config: {\n      tension: 210,\n      friction: 20\n    }\n  }));\n  const handleButtonClick = selectedImage => {\n    setButtonProps({\n      scale: 1.2\n    });\n    handleImageSelection(selectedImage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moral-descriptors\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"How does this technology make you feel?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: transitions((style, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(a.button, {\n          style: buttonProps,\n          onClick: () => handleButtonClick(\"high\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSources.high,\n            alt: \"High\",\n            className: selectedImages.high === moralDescriptors[item] ? \"image-pop-up\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(a.button, {\n          style: buttonProps,\n          onClick: () => handleButtonClick(\"low\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSources.low,\n            alt: \"Low\",\n            className: selectedImages.low === moralDescriptors[item] ? \"image-pop-up\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"unsure-button\",\n      onClick: () => handleImageSelection(\"unsure\"),\n      children: \"Unsure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(MoralDescriptors, \"ZZernErAHFQMTCswIh2heWJT4dg=\", false, function () {\n  return [useTransition, useSpring];\n});\n_c = MoralDescriptors;\nexport default MoralDescriptors;\nvar _c;\n$RefreshReg$(_c, \"MoralDescriptors\");","map":{"version":3,"names":["React","useState","useSpring","useTransition","animated","a","authorityLow","authorityHigh","fairLow","fairHigh","jsxDEV","_jsxDEV","MoralDescriptors","_ref","_s","moralDescriptors","handleNextCards","currentDescriptorIndex","setCurrentDescriptorIndex","selectedImages","setSelectedImages","high","low","handleImageSelection","selectedImage","length","getImageSource","descriptor","currentDescriptor","imageSources","transitions","from","opacity","transform","enter","config","tension","friction","buttonProps","setButtonProps","scale","handleButtonClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","item","button","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/components/MoralDescriptors.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpring, useTransition, animated as a } from \"react-spring\";\r\nimport \"./styles/MoralDescriptors.css\";\r\nimport authorityLow from \"../images/AuthorityLow/b15_p345_14.jpg\";\r\nimport authorityHigh from \"../images/AuthorityHigh/b15_p460_8.jpg\";\r\nimport fairLow from \"../images/FairLow/b10_p133_8.jpg\";\r\nimport fairHigh from \"../images/FairHigh/b11_p172_9.jpg\";\r\n\r\nconst MoralDescriptors = ({ moralDescriptors, handleNextCards }) => {\r\n  const [currentDescriptorIndex, setCurrentDescriptorIndex] = useState(0);\r\n  const [selectedImages, setSelectedImages] = useState({\r\n    high: null,\r\n    low: null,\r\n  });\r\n\r\n  const handleImageSelection = (selectedImage) => {\r\n    if (selectedImage === \"high\") {\r\n      setSelectedImages({\r\n        ...selectedImages,\r\n        high: moralDescriptors[currentDescriptorIndex],\r\n      });\r\n    } else if (selectedImage === \"low\") {\r\n      setSelectedImages({\r\n        ...selectedImages,\r\n        low: moralDescriptors[currentDescriptorIndex],\r\n      });\r\n    }\r\n\r\n    if (currentDescriptorIndex === moralDescriptors.length - 1) {\r\n      handleNextCards();\r\n    } else {\r\n      setCurrentDescriptorIndex(currentDescriptorIndex + 1);\r\n    }\r\n  };\r\n\r\n  const getImageSource = (descriptor) => {\r\n    switch (descriptor) {\r\n      case \"Authority\":\r\n        return {\r\n          high: authorityHigh,\r\n          low: authorityLow,\r\n        };\r\n      case \"Fair\":\r\n        return {\r\n          high: fairHigh,\r\n          low: fairLow,\r\n        };\r\n      default:\r\n        return {\r\n          high: \"\",\r\n          low: \"\",\r\n        };\r\n    }\r\n  };\r\n\r\n  const currentDescriptor = moralDescriptors[currentDescriptorIndex];\r\n  const imageSources = getImageSource(currentDescriptor);\r\n\r\n  // setup transition for images\r\n  const transitions = useTransition(currentDescriptorIndex, {\r\n    from: { opacity: 0, transform: \"scale(0)\" },\r\n    enter: { opacity: 1, transform: \"scale(1)\" },\r\n    config: { tension: 210, friction: 20 },\r\n  });\r\n\r\n  // setup spring for button\r\n  const [buttonProps, setButtonProps] = useSpring(() => ({\r\n    scale: 1,\r\n    config: { tension: 210, friction: 20 },\r\n  }));\r\n\r\n  const handleButtonClick = (selectedImage) => {\r\n    setButtonProps({ scale: 1.2 });\r\n    handleImageSelection(selectedImage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"moral-descriptors\">\r\n      <h3>How does this technology make you feel?</h3>\r\n      <div className=\"image-container\">\r\n        {transitions((style, item) => (\r\n          <div className=\"image-wrapper\">\r\n            <a.button\r\n              style={buttonProps}\r\n              onClick={() => handleButtonClick(\"high\")}\r\n            >\r\n              <img\r\n                src={imageSources.high}\r\n                alt=\"High\"\r\n                className={\r\n                  selectedImages.high === moralDescriptors[item]\r\n                    ? \"image-pop-up\"\r\n                    : \"\"\r\n                }\r\n              />\r\n            </a.button>\r\n            <a.button\r\n              style={buttonProps}\r\n              onClick={() => handleButtonClick(\"low\")}\r\n            >\r\n              <img\r\n                src={imageSources.low}\r\n                alt=\"Low\"\r\n                className={\r\n                  selectedImages.low === moralDescriptors[item]\r\n                    ? \"image-pop-up\"\r\n                    : \"\"\r\n                }\r\n              />\r\n            </a.button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"unsure-button\"\r\n        onClick={() => handleImageSelection(\"unsure\")}\r\n      >\r\n        Unsure\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoralDescriptors;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}