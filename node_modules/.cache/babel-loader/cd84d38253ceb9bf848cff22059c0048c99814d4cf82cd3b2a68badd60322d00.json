{"ast":null,"code":"import _objectSpread from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useSpring,animated as a}from\"react-spring\";// Added this line\nimport{useTrail,animated as b}from\"react-spring\";import TechnologyCard from\"./TechnologyCard\";import Rankings from\"./Rankings\";import ScoreBar from\"./ScoreBar\";import Comparisons from\"../data/comparisons.json\";import ScoreLine from\"./ScoreLine\";import TwoScoreLine from\"./TwoScoreLine\";import MoralDescriptors from\"./MoralDescriptors\";import Button from\"./Button\";import\"./styles/PairwiseGame.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var moralDescriptors=[\"Authority\",\"Fair\"];var firstBad=[\"Harmful\",\"Unjust\",\"Disloyal\",\"Disobedient\",\"Indecent\"];var firstGood=[\"Protective\",\"Impartial\",\"Loyal\",\"Respectful\",\"Decent\"];var secondBad=[\"Violent\",\"Discriminatory\",\"Traitor\",\"Defiant\",\"Obscene\"];var secondGood=[\"Caring\",\"Fair\",\"Devoted\",\"Lawful\",\"Virtuous\"];var descriptors={firstDescriptors:[].concat(firstBad,firstGood),secondDescriptors:[].concat(secondBad,secondGood)};var PairwiseGame=function PairwiseGame(_ref){var technologies=_ref.technologies,finishGame=_ref.finishGame;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),shuffledTechnologies=_useState2[0],setShuffledTechnologies=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentPairIndex=_useState4[0],setCurrentPairIndex=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),rankings=_useState6[0],setRankings=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),selectedDescriptors=_useState8[0],setSelectedDescriptors=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),gameOver=_useState10[0],setGameOver=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),selectedCard=_useState12[0],setSelectedCard=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),unselectedCard=_useState14[0],setUnselectedCard=_useState14[1];var _useState15=useState(\"firstDescriptors\"),_useState16=_slicedToArray(_useState15,2),descriptorStage=_useState16[0],setDescriptorStage=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),progress=_useState18[0],setProgress=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),selectionMade=_useState20[0],setSelectionMade=_useState20[1];var _useState21=useState(0),_useState22=_slicedToArray(_useState21,2),selectedPercent=_useState22[0],setSelectedPercent=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),unselectedPercent=_useState24[0],setUnselectedPercent=_useState24[1];var _useState25=useState(null),_useState26=_slicedToArray(_useState25,2),firstClickTime=_useState26[0],setFirstClickTime=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),descriptorClickTimes=_useState28[0],setDescriptorClickTimes=_useState28[1];var _useState29=useState(0),_useState30=_slicedToArray(_useState29,2),score=_useState30[0],setScore=_useState30[1];var _useState31=useState(null),_useState32=_slicedToArray(_useState31,2),selectedIndex=_useState32[0],setSelectedIndex=_useState32[1];var _useState33=useState(0),_useState34=_slicedToArray(_useState33,2),scoreIndex=_useState34[0],setScoreIndex=_useState34[1];var _useState35=useState(null),_useState36=_slicedToArray(_useState35,2),agreementAnswer=_useState36[0],setAgreementAnswer=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),showDescriptorImages=_useState38[0],setShowDescriptorImages=_useState38[1];useEffect(function(){if(technologies.length>0){// Shuffle technologies array\nvar _shuffledTechnologies=_toConsumableArray(technologies);for(var i=_shuffledTechnologies.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref2=[_shuffledTechnologies[j],_shuffledTechnologies[i]];_shuffledTechnologies[i]=_ref2[0];_shuffledTechnologies[j]=_ref2[1];}// Create pairs from the shuffled technologies array\nvar tempShuffledTechnologies=[];for(var _i=0;_i<_shuffledTechnologies.length;_i+=2){tempShuffledTechnologies.push([_shuffledTechnologies[_i],_shuffledTechnologies[_i+1]]);}// Limit the length of tempShuffledTechnologies to match the length of technologies\ntempShuffledTechnologies=tempShuffledTechnologies.slice(0,technologies.length);setShuffledTechnologies(tempShuffledTechnologies);// Use the original technologies array for the initial rankings\nvar initialRankings={};technologies.forEach(function(tech){initialRankings[tech.title]={descriptors:[],wins:0,losses:0,ties:0,opponents:{}// Keep track of wins, losses, and ties against each opponent\n};});setRankings(initialRankings);}},[technologies]);useEffect(function(){if(currentPairIndex>=technologies.length/2){setGameOver(true);}},[currentPairIndex,technologies.length]);useEffect(function(){calculateProgress();},[currentPairIndex]);var calculateProgress=function calculateProgress(){var totalPairs=Math.floor(technologies.length/2);var currentProgress=currentPairIndex/totalPairs*100;setProgress(currentProgress);};var handleChoice=function handleChoice(chosenIndex){// Adjustments to handle new shuffledTechnologies format\nsetDescriptorClickTimes([]);setFirstClickTime(Date.now());if(selectedCard!==null){return;// If a card is already selected, do nothing\n}var chosenCard=chosenIndex%2===0?0:1;setSelectedCard(shuffledTechnologies[currentPairIndex][chosenCard]);var percentCard=shuffledTechnologies[currentPairIndex][chosenCard];var unpercentCard=shuffledTechnologies[currentPairIndex][(chosenCard+1)%2];setSelectedIndex(chosenIndex);setUnselectedCard(shuffledTechnologies[currentPairIndex][(chosenCard+1)%2]);var foundComparison=Comparisons.comparisons.find(function(comp){return comp.title1===percentCard.title&&comp.title2===unpercentCard.title;});setScoreIndex(function(scoreIndex){return scoreIndex+1;});// Update the score based on the selectedPercent\nif(foundComparison){setScore(function(prevScore){return prevScore+(100-foundComparison.percent1);});setSelectedPercent(foundComparison.percent1);setUnselectedPercent(foundComparison.percent2);}else{setScore(function(prevScore){return prevScore;});var wrongOrder=Comparisons.comparisons.find(function(comp){return comp.title1===unpercentCard.title&&comp.title2===percentCard.title;});setSelectedPercent(wrongOrder.percent2);setUnselectedPercent(wrongOrder.percent1);}setSelectionMade(true);setAgreementAnswer(null);};var renderTechnologyCard=function renderTechnologyCard(index){var tech=shuffledTechnologies[currentPairIndex][index];var percent={selectedCard:selectedPercent,unselectedCard:unselectedPercent};return/*#__PURE__*/_jsx(TechnologyCard,{tech:tech,handleChoice:handleChoice,index:index,percent:percent,selectionMade:selectionMade,agreementAnswer:agreementAnswer,isClicked:index===selectedIndex},tech.title);};var handleAgreementAnswer=function handleAgreementAnswer(answer){setShowDescriptorImages(true);setAgreementAnswer(answer);};var handleNextCards=function handleNextCards(){var updatedRankings=_objectSpread({},rankings);// Check if we should move onto the next stage or finish this round\nvar selectedTech=selectedCard.title;var unselectedTech=unselectedCard.title;// Update wins, losses, and opponents\nupdatedRankings[selectedTech].wins+=1;updatedRankings[unselectedTech].losses+=1;updatedRankings[selectedTech].opponents[unselectedTech]=(updatedRankings[selectedTech].opponents[unselectedTech]||0)+1;updatedRankings[unselectedTech].opponents[selectedTech]=(updatedRankings[unselectedTech].opponents[selectedTech]||0)-1;// Update the descriptors\nsetRankings(updatedRankings);setSelectedDescriptors([]);setSelectedCard(null);setUnselectedCard(null);setCurrentPairIndex(currentPairIndex+1);setDescriptorStage(\"firstDescriptors\");// Reset the descriptor stage\nsetSelectionMade(false);setSelectedIndex(null);setAgreementAnswer(null);setShowDescriptorImages(false);// Now the effect that triggers game over will run if necessary\n};var handleSkip=function handleSkip(){var updatedRankings=_objectSpread({},rankings);var firstTech=shuffledTechnologies[currentPairIndex][0].title;var secondTech=shuffledTechnologies[currentPairIndex][1].title;// Update ties and opponents\nupdatedRankings[firstTech].ties+=1;updatedRankings[secondTech].ties+=1;updatedRankings[firstTech].opponents[secondTech]=updatedRankings[firstTech].opponents[secondTech]||0;updatedRankings[secondTech].opponents[firstTech]=updatedRankings[secondTech].opponents[firstTech]||0;setScoreIndex(function(scoreIndex){return scoreIndex+1;});setRankings(updatedRankings);setSelectedDescriptors([]);setSelectedCard(null);setUnselectedCard(null);setCurrentPairIndex(currentPairIndex+1);setDescriptorStage(\"firstDescriptors\");// Reset the descriptor stage\nsetSelectionMade(false);setAgreementAnswer(null);};console.log(showDescriptorImages);return/*#__PURE__*/_jsxs(\"div\",{className:\"pairwise-game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-inner\",style:{width:\"\".concat(progress,\"%\")}})}),!gameOver&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Which technology do you prefer to be used on you or your loved ones? Facial recognition to ...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"technology-pair\",children:[currentPairIndex<shuffledTechnologies.length&&/*#__PURE__*/_jsxs(_Fragment,{children:[renderTechnologyCard(0),renderTechnologyCard(1)]}),selectedCard?null:/*#__PURE__*/_jsx(\"div\",{className:\"descriptors\",children:/*#__PURE__*/_jsx(Button,{text:\"Skip\",onClick:handleSkip})})]}),selectedCard&&!agreementAnswer&&/*#__PURE__*/_jsxs(\"div\",{className:\"agreement-question\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Do you think most people agree with you?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAgreementAnswer(\"yes\");},children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAgreementAnswer(\"no\");},children:\"No\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAgreementAnswer(\"unsure\");},children:\"Unsure\"})]})]}),selectedCard&&showDescriptorImages&&/*#__PURE__*/_jsx(MoralDescriptors,{moralDescriptors:moralDescriptors,handleNextCards:handleNextCards}),/*#__PURE__*/_jsx(ScoreBar,{score:score})]}),gameOver&&/*#__PURE__*/_jsx(Rankings,{rankings:rankings,finishGame:finishGame})]});};export default PairwiseGame;","map":{"version":3,"names":["React","useState","useEffect","useSpring","animated","a","useTrail","b","TechnologyCard","Rankings","ScoreBar","Comparisons","ScoreLine","TwoScoreLine","MoralDescriptors","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","moralDescriptors","firstBad","firstGood","secondBad","secondGood","descriptors","firstDescriptors","concat","secondDescriptors","PairwiseGame","_ref","technologies","finishGame","_useState","_useState2","_slicedToArray","shuffledTechnologies","setShuffledTechnologies","_useState3","_useState4","currentPairIndex","setCurrentPairIndex","_useState5","_useState6","rankings","setRankings","_useState7","_useState8","selectedDescriptors","setSelectedDescriptors","_useState9","_useState10","gameOver","setGameOver","_useState11","_useState12","selectedCard","setSelectedCard","_useState13","_useState14","unselectedCard","setUnselectedCard","_useState15","_useState16","descriptorStage","setDescriptorStage","_useState17","_useState18","progress","setProgress","_useState19","_useState20","selectionMade","setSelectionMade","_useState21","_useState22","selectedPercent","setSelectedPercent","_useState23","_useState24","unselectedPercent","setUnselectedPercent","_useState25","_useState26","firstClickTime","setFirstClickTime","_useState27","_useState28","descriptorClickTimes","setDescriptorClickTimes","_useState29","_useState30","score","setScore","_useState31","_useState32","selectedIndex","setSelectedIndex","_useState33","_useState34","scoreIndex","setScoreIndex","_useState35","_useState36","agreementAnswer","setAgreementAnswer","_useState37","_useState38","showDescriptorImages","setShowDescriptorImages","length","_toConsumableArray","i","j","Math","floor","random","_ref2","tempShuffledTechnologies","push","slice","initialRankings","forEach","tech","title","wins","losses","ties","opponents","calculateProgress","totalPairs","currentProgress","handleChoice","chosenIndex","Date","now","chosenCard","percentCard","unpercentCard","foundComparison","comparisons","find","comp","title1","title2","prevScore","percent1","percent2","wrongOrder","renderTechnologyCard","index","percent","isClicked","handleAgreementAnswer","answer","handleNextCards","updatedRankings","_objectSpread","selectedTech","unselectedTech","handleSkip","firstTech","secondTech","console","log","className","children","style","width","text","onClick"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/components/PairwiseGame.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSpring, animated as a } from \"react-spring\"; // Added this line\r\nimport { useTrail, animated as b } from \"react-spring\";\r\nimport TechnologyCard from \"./TechnologyCard\";\r\nimport Rankings from \"./Rankings\";\r\nimport ScoreBar from \"./ScoreBar\";\r\nimport Comparisons from \"../data/comparisons.json\";\r\nimport ScoreLine from \"./ScoreLine\";\r\nimport TwoScoreLine from \"./TwoScoreLine\";\r\nimport MoralDescriptors from \"./MoralDescriptors\";\r\nimport Button from \"./Button\";\r\nimport \"./styles/PairwiseGame.css\";\r\n\r\nconst moralDescriptors = [\"Authority\", \"Fair\"];\r\n\r\nconst firstBad = [\"Harmful\", \"Unjust\", \"Disloyal\", \"Disobedient\", \"Indecent\"];\r\nconst firstGood = [\"Protective\", \"Impartial\", \"Loyal\", \"Respectful\", \"Decent\"];\r\nconst secondBad = [\r\n  \"Violent\",\r\n  \"Discriminatory\",\r\n  \"Traitor\",\r\n  \"Defiant\",\r\n  \"Obscene\",\r\n];\r\nconst secondGood = [\"Caring\", \"Fair\", \"Devoted\", \"Lawful\", \"Virtuous\"];\r\nconst descriptors = {\r\n  firstDescriptors: [...firstBad, ...firstGood],\r\n  secondDescriptors: [...secondBad, ...secondGood],\r\n};\r\n\r\nconst PairwiseGame = ({ technologies, finishGame }) => {\r\n  const [shuffledTechnologies, setShuffledTechnologies] = useState([]);\r\n\r\n  const [currentPairIndex, setCurrentPairIndex] = useState(0);\r\n  const [rankings, setRankings] = useState({});\r\n  const [selectedDescriptors, setSelectedDescriptors] = useState([]);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [unselectedCard, setUnselectedCard] = useState(null);\r\n  const [descriptorStage, setDescriptorStage] = useState(\"firstDescriptors\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [selectionMade, setSelectionMade] = useState(false);\r\n  const [selectedPercent, setSelectedPercent] = useState(0);\r\n  const [unselectedPercent, setUnselectedPercent] = useState(0);\r\n  const [firstClickTime, setFirstClickTime] = useState(null);\r\n  const [descriptorClickTimes, setDescriptorClickTimes] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [scoreIndex, setScoreIndex] = useState(0);\r\n  const [agreementAnswer, setAgreementAnswer] = useState(null);\r\n  const [showDescriptorImages, setShowDescriptorImages] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (technologies.length > 0) {\r\n      // Shuffle technologies array\r\n      let shuffledTechnologies = [...technologies];\r\n      for (let i = shuffledTechnologies.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [shuffledTechnologies[i], shuffledTechnologies[j]] = [\r\n          shuffledTechnologies[j],\r\n          shuffledTechnologies[i],\r\n        ];\r\n      }\r\n\r\n      // Create pairs from the shuffled technologies array\r\n      let tempShuffledTechnologies = [];\r\n      for (let i = 0; i < shuffledTechnologies.length; i += 2) {\r\n        tempShuffledTechnologies.push([\r\n          shuffledTechnologies[i],\r\n          shuffledTechnologies[i + 1],\r\n        ]);\r\n      }\r\n\r\n      // Limit the length of tempShuffledTechnologies to match the length of technologies\r\n      tempShuffledTechnologies = tempShuffledTechnologies.slice(\r\n        0,\r\n        technologies.length\r\n      );\r\n      setShuffledTechnologies(tempShuffledTechnologies);\r\n\r\n      // Use the original technologies array for the initial rankings\r\n      let initialRankings = {};\r\n      technologies.forEach((tech) => {\r\n        initialRankings[tech.title] = {\r\n          descriptors: [],\r\n          wins: 0,\r\n          losses: 0,\r\n          ties: 0,\r\n          opponents: {}, // Keep track of wins, losses, and ties against each opponent\r\n        };\r\n      });\r\n      setRankings(initialRankings);\r\n    }\r\n  }, [technologies]);\r\n\r\n  useEffect(() => {\r\n    if (currentPairIndex >= technologies.length / 2) {\r\n      setGameOver(true);\r\n    }\r\n  }, [currentPairIndex, technologies.length]);\r\n\r\n  useEffect(() => {\r\n    calculateProgress();\r\n  }, [currentPairIndex]);\r\n\r\n  const calculateProgress = () => {\r\n    const totalPairs = Math.floor(technologies.length / 2);\r\n    const currentProgress = (currentPairIndex / totalPairs) * 100;\r\n    setProgress(currentProgress);\r\n  };\r\n\r\n  const handleChoice = (chosenIndex) => {\r\n    // Adjustments to handle new shuffledTechnologies format\r\n    setDescriptorClickTimes([]);\r\n    setFirstClickTime(Date.now());\r\n\r\n    if (selectedCard !== null) {\r\n      return; // If a card is already selected, do nothing\r\n    }\r\n\r\n    const chosenCard = chosenIndex % 2 === 0 ? 0 : 1;\r\n\r\n    setSelectedCard(shuffledTechnologies[currentPairIndex][chosenCard]);\r\n    const percentCard = shuffledTechnologies[currentPairIndex][chosenCard];\r\n    const unpercentCard =\r\n      shuffledTechnologies[currentPairIndex][(chosenCard + 1) % 2];\r\n    setSelectedIndex(chosenIndex);\r\n\r\n    setUnselectedCard(\r\n      shuffledTechnologies[currentPairIndex][(chosenCard + 1) % 2]\r\n    );\r\n\r\n    const foundComparison = Comparisons.comparisons.find(\r\n      (comp) =>\r\n        comp.title1 === percentCard.title && comp.title2 === unpercentCard.title\r\n    );\r\n    setScoreIndex((scoreIndex) => scoreIndex + 1);\r\n\r\n    // Update the score based on the selectedPercent\r\n    if (foundComparison) {\r\n      setScore((prevScore) => prevScore + (100 - foundComparison.percent1));\r\n      setSelectedPercent(foundComparison.percent1);\r\n      setUnselectedPercent(foundComparison.percent2);\r\n    } else {\r\n      setScore((prevScore) => prevScore);\r\n      const wrongOrder = Comparisons.comparisons.find(\r\n        (comp) =>\r\n          comp.title1 === unpercentCard.title &&\r\n          comp.title2 === percentCard.title\r\n      );\r\n      setSelectedPercent(wrongOrder.percent2);\r\n      setUnselectedPercent(wrongOrder.percent1);\r\n    }\r\n\r\n    setSelectionMade(true);\r\n    setAgreementAnswer(null);\r\n  };\r\n\r\n  const renderTechnologyCard = (index) => {\r\n    const tech = shuffledTechnologies[currentPairIndex][index];\r\n    const percent = {\r\n      selectedCard: selectedPercent,\r\n      unselectedCard: unselectedPercent,\r\n    };\r\n\r\n    return (\r\n      <TechnologyCard\r\n        key={tech.title}\r\n        tech={tech}\r\n        handleChoice={handleChoice}\r\n        index={index}\r\n        percent={percent}\r\n        selectionMade={selectionMade}\r\n        agreementAnswer={agreementAnswer}\r\n        isClicked={index === selectedIndex}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleAgreementAnswer = (answer) => {\r\n    setShowDescriptorImages(true);\r\n    setAgreementAnswer(answer);\r\n  };\r\n  const handleNextCards = () => {\r\n    let updatedRankings = { ...rankings };\r\n    // Check if we should move onto the next stage or finish this round\r\n\r\n    const selectedTech = selectedCard.title;\r\n    const unselectedTech = unselectedCard.title;\r\n\r\n    // Update wins, losses, and opponents\r\n    updatedRankings[selectedTech].wins += 1;\r\n    updatedRankings[unselectedTech].losses += 1;\r\n    updatedRankings[selectedTech].opponents[unselectedTech] =\r\n      (updatedRankings[selectedTech].opponents[unselectedTech] || 0) + 1;\r\n    updatedRankings[unselectedTech].opponents[selectedTech] =\r\n      (updatedRankings[unselectedTech].opponents[selectedTech] || 0) - 1;\r\n\r\n    // Update the descriptors\r\n\r\n    setRankings(updatedRankings);\r\n    setSelectedDescriptors([]);\r\n    setSelectedCard(null);\r\n    setUnselectedCard(null);\r\n    setCurrentPairIndex(currentPairIndex + 1);\r\n    setDescriptorStage(\"firstDescriptors\"); // Reset the descriptor stage\r\n    setSelectionMade(false);\r\n    setSelectedIndex(null);\r\n    setAgreementAnswer(null);\r\n    setShowDescriptorImages(false);\r\n\r\n    // Now the effect that triggers game over will run if necessary\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    let updatedRankings = { ...rankings };\r\n    const firstTech = shuffledTechnologies[currentPairIndex][0].title;\r\n    const secondTech = shuffledTechnologies[currentPairIndex][1].title;\r\n\r\n    // Update ties and opponents\r\n    updatedRankings[firstTech].ties += 1;\r\n    updatedRankings[secondTech].ties += 1;\r\n    updatedRankings[firstTech].opponents[secondTech] =\r\n      updatedRankings[firstTech].opponents[secondTech] || 0;\r\n    updatedRankings[secondTech].opponents[firstTech] =\r\n      updatedRankings[secondTech].opponents[firstTech] || 0;\r\n    setScoreIndex((scoreIndex) => scoreIndex + 1);\r\n\r\n    setRankings(updatedRankings);\r\n    setSelectedDescriptors([]);\r\n    setSelectedCard(null);\r\n    setUnselectedCard(null);\r\n    setCurrentPairIndex(currentPairIndex + 1);\r\n    setDescriptorStage(\"firstDescriptors\"); // Reset the descriptor stage\r\n    setSelectionMade(false);\r\n    setAgreementAnswer(null);\r\n  };\r\n  console.log(showDescriptorImages);\r\n  return (\r\n    <div className=\"pairwise-game\">\r\n      <div className=\"progress-bar\">\r\n        <div\r\n          className=\"progress-bar-inner\"\r\n          style={{ width: `${progress}%` }}\r\n        ></div>\r\n      </div>\r\n\r\n      {!gameOver && (\r\n        <>\r\n          <h2>\r\n            Which technology do you prefer to be used on you or your loved ones?\r\n            Facial recognition to ...\r\n          </h2>\r\n\r\n          <div className=\"technology-pair\">\r\n            {currentPairIndex < shuffledTechnologies.length && (\r\n              <>\r\n                {renderTechnologyCard(0)}\r\n\r\n                {renderTechnologyCard(1)}\r\n              </>\r\n            )}\r\n            {selectedCard ? null : (\r\n              <div className=\"descriptors\">\r\n                <Button text=\"Skip\" onClick={handleSkip} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          {selectedCard && !agreementAnswer && (\r\n            <div className=\"agreement-question\">\r\n              <p>Do you think most people agree with you?</p>\r\n              <div className=\"button-container\">\r\n                <button onClick={() => handleAgreementAnswer(\"yes\")}>\r\n                  Yes\r\n                </button>\r\n                <button onClick={() => handleAgreementAnswer(\"no\")}>No</button>\r\n                <button onClick={() => handleAgreementAnswer(\"unsure\")}>\r\n                  Unsure\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {selectedCard && showDescriptorImages && (\r\n            <MoralDescriptors\r\n              moralDescriptors={moralDescriptors}\r\n              handleNextCards={handleNextCards}\r\n            />\r\n          )}\r\n\r\n          <ScoreBar score={score} />\r\n        </>\r\n      )}\r\n      {gameOver && <Rankings rankings={rankings} finishGame={finishGame} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PairwiseGame;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}