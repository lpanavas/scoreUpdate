{"ast":null,"code":"import _objectSpread from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import axios from\"axios\";import Button from\"./Button\";import FlipMove from\"react-flip-move\";import Modal from\"react-modal\";import\"./styles/Rankings.css\";import chroma from\"chroma-js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";Modal.setAppElement(\"#root\");var Rankings=function Rankings(_ref){var outputData=_ref.outputData,selectedCards=_ref.selectedCards;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),rankings=_useState2[0],setRankings=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),userRankings=_useState4[0],setUserRankings=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),publicRankings=_useState6[0],setPublicRankings=_useState6[1];var _useState7=useState({type:\"\",value:\"\"}),_useState8=_slicedToArray(_useState7,2),demographic=_useState8[0],setDemographic=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isModalOpen=_useState10[0],setIsModalOpen=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),selectedCardData=_useState12[0],setSelectedCardData=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),flippedCardId=_useState14[0],setFlippedCardId=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),flippedCardIds=_useState16[0],setFlippedCardIds=_useState16[1];useEffect(function(){console.log(\"outputData changed:\",outputData);},[outputData]);useEffect(function(){var cardIds=selectedCards.map(function(card){return card.ID;});axios.post(\"/data/rankings\",{cards:cardIds,demographics:demographic}).then(function(response){var sortedPublicRankings=Object.entries(response.data.ratings).sort(function(a,b){return b[1]-a[1];});setRankings(sortedPublicRankings);setPublicRankings(sortedPublicRankings);console.log(sortedPublicRankings);}).catch(function(error){console.error(\"Error:\",error);});},[]);useEffect(function(){var rankings={};var ratings={};var K=40;var cards=selectedCards.map(function(card){return card.ID;});// Initialize rankings object and ratings with player's cards\ncards.forEach(function(card){rankings[card]={wins:0,losses:0,ties:0,opponents:{}};ratings[card]=1800;// default rating\n});var matchups=outputData.CardMatchups;// Iterate through all the matchups\nmatchups.forEach(function(matchup){// Initialize the opponents\nif(rankings[matchup.Card1]&&rankings[matchup.Card2]){if(!rankings[matchup.Card1].opponents[matchup.Card2]){rankings[matchup.Card1].opponents[matchup.Card2]={wins:0,losses:0,ties:0};}if(!rankings[matchup.Card2].opponents[matchup.Card1]){rankings[matchup.Card2].opponents[matchup.Card1]={wins:0,losses:0,ties:0};}if(matchup.Answer===\"Skip\"){// It's a tie\nrankings[matchup.Card1].ties+=1;rankings[matchup.Card2].ties+=1;rankings[matchup.Card1].opponents[matchup.Card2].ties+=1;rankings[matchup.Card2].opponents[matchup.Card1].ties+=1;}else{// There is a winner\nvar winner=matchup.Answer;var loser=winner===matchup.Card1?matchup.Card2:matchup.Card1;rankings[winner].wins+=1;rankings[loser].losses+=1;rankings[winner].opponents[loser].losses+=1;rankings[loser].opponents[winner].wins+=1;}}});// Calculate ratings using the relative logistic method\nvar numPlayers=cards.length;for(var i=0;i<numPlayers;i++){var playerA=cards[i];for(var j=0;j<numPlayers;j++){if(i!==j){var playerB=cards[j];if(rankings[playerA].opponents[playerB]){var totalGamesAgainstOpponent=rankings[playerA].opponents[playerB].wins+rankings[playerA].opponents[playerB].losses+rankings[playerA].opponents[playerB].ties;var winRatio=rankings[playerA].opponents[playerB].wins/totalGamesAgainstOpponent;var lossRatio=rankings[playerA].opponents[playerB].losses/totalGamesAgainstOpponent;var ratingDifference=ratings[playerB]-ratings[playerA];var expectedScore=pnorm(ratingDifference,0,2000/7,1);var actualScore=winRatio+0.5*rankings[playerA].opponents[playerB].ties/totalGamesAgainstOpponent;var delta=K*(actualScore-expectedScore);ratings[playerA]+=delta;}}}}var sortedUserRankings=Object.entries(ratings).sort(function(a,b){return b[1]-a[1];});setUserRankings(sortedUserRankings);},[outputData]);function pnorm(x,mean,sd,upperTail){var q=(x-mean)/sd;return upperTail?(1-Math.atan(q)/Math.PI)*0.5:Math.atan(q)/Math.PI+0.5;}useEffect(function(){// Convert selected cards to an array of card IDs\nvar cardIds=selectedCards.map(function(card){return card.ID;});// Define the demographics\nvar demographics=_defineProperty({},demographic.type,demographic.value);// Check if both type and value are set\nif(demographic.type&&demographic.value){// Send request to server\naxios.post(\"/data/rankings\",{cards:cardIds,demographics:demographics}).then(function(response){var sortedPublicRankings=Object.entries(response.data.ratings).sort(function(a,b){return a[1]-b[1];});setRankings(sortedPublicRankings);setPublicRankings(sortedPublicRankings);console.log(sortedPublicRankings);}).catch(function(error){console.error(\"Error:\",error);});}},[selectedCards,demographic.type,demographic.value]);var cardIdToTitle={};selectedCards.forEach(function(card){cardIdToTitle[card.ID]=card.title;});// Create a color scale\nvar colorScale=chroma.scale([\"#9780FF\",\"#ff5c97\"]).mode(\"lch\").colors(userRankings?userRankings.length:0);var cardIdToColor={};if(userRankings){userRankings.forEach(function(_ref2,index){var _ref3=_slicedToArray(_ref2,1),id=_ref3[0];cardIdToColor[id]=colorScale[index];});}var openModal=function openModal(cardData){var matchingCard=selectedCards.find(function(card){return card.ID===cardData.id;});console.log(outputData);setSelectedCardData(matchingCard);setIsModalOpen(true);};var closeModal=function closeModal(){setIsModalOpen(false);};var flipCard=function flipCard(id){setFlippedCardIds(function(prevFlippedCardIds){if(prevFlippedCardIds.includes(id)){return prevFlippedCardIds.filter(function(cardId){return cardId!==id;});}else{return[].concat(_toConsumableArray(prevFlippedCardIds),[id]);}});};var findCard=function findCard(id){var matchingCard=selectedCards.find(function(card){return card.ID===id;});return matchingCard;};return/*#__PURE__*/_jsxs(\"div\",{className:\"rankings\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rankings-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Results\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Explore your game results and see how you compare with others. See how you ranked the technologies and how it matches up to others. Click any card in Your Rankings to find out the risk level!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"middle-rankings\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"middle-rankings-single-column\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"middle-rankings-columns\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"demographic-selection\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"demographicType\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"rankings-selection\",id:\"demographicType\",value:demographic.type,onChange:function onChange(e){return setDemographic(_objectSpread(_objectSpread({},demographic),{},{type:e.target.value,value:\"\"}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Demographic Type\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Gender\",children:\"Gender\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Age\",children:\"Age\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Race\",children:\"Race\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Education\",children:\"Education Level\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"middle-rankings-columns\",children:demographic.type&&/*#__PURE__*/_jsxs(\"div\",{className:\"demographic-selection\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"demographicValue\"}),demographic.type===\"Gender\"&&/*#__PURE__*/_jsxs(\"select\",{className:\"rankings-selection\",id:\"demographicValue\",value:demographic.value,onChange:function onChange(e){return setDemographic(_objectSpread(_objectSpread({},demographic),{},{value:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Gender\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Male\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Female\",children:\"Female\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Non-binary\",children:\"Non-binary/ third gender\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Prefer not to say\",children:\"Prefer not to say\"})]}),demographic.type===\"Race\"&&/*#__PURE__*/_jsxs(\"select\",{className:\"rankings-selection\",id:\"demographicValue\",value:demographic.value,onChange:function onChange(e){return setDemographic(_objectSpread(_objectSpread({},demographic),{},{value:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Race\"}),/*#__PURE__*/_jsx(\"option\",{value:\"White\",children:\"White\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Black\",children:\"Black\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Asian\",children:\"Asian\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Hispanic\",children:\"Hispanic\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mixed\",children:\"Mixed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]}),demographic.type===\"Age\"&&/*#__PURE__*/_jsxs(\"select\",{className:\"rankings-selection\",id:\"demographicValue\",value:demographic.value,onChange:function onChange(e){return setDemographic(_objectSpread(_objectSpread({},demographic),{},{value:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Age\"}),/*#__PURE__*/_jsx(\"option\",{value:\"<18\",children:\"Under 18\"}),/*#__PURE__*/_jsx(\"option\",{value:\"18-24\",children:\"18-24\"}),/*#__PURE__*/_jsx(\"option\",{value:\"25-34\",children:\"25-34\"}),/*#__PURE__*/_jsx(\"option\",{value:\"35-44\",children:\"35-44\"}),/*#__PURE__*/_jsx(\"option\",{value:\"45-54\",children:\"45-54\"}),/*#__PURE__*/_jsx(\"option\",{value:\"55-64\",children:\"55-64\"}),/*#__PURE__*/_jsx(\"option\",{value:\"65+\",children:\"65+\"})]}),demographic.type===\"Education\"&&/*#__PURE__*/_jsxs(\"select\",{className:\"rankings-selection\",id:\"demographicValue\",value:demographic.value,onChange:function onChange(e){return setDemographic(_objectSpread(_objectSpread({},demographic),{},{value:e.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Education Level\"}),/*#__PURE__*/_jsx(\"option\",{value:\"High School\",children:\"High School\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bachelors\",children:\"Bachelors\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Masters\",children:\"Masters\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PhD\",children:\"PhD\"})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"top-rankings\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"top-rankings-columns\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Your Rankings\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"top-rankings-columns\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Public Rankings\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-rankings\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rankings-columns\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:\"Most Acceptable\"}),userRankings?userRankings.map(function(_ref4){var _ref5=_slicedToArray(_ref4,2),id=_ref5[0],rank=_ref5[1];return/*#__PURE__*/_jsx(\"div\",{className:\"card-ranking \".concat(flippedCardIds.includes(id)?\"flipped\":\"\"),onClick:function onClick(){return flipCard(id);},style:{borderColor:cardIdToColor[id],borderWidth:\".5vw\",borderStyle:\"solid\"},children:flippedCardIds.includes(id)?/*#__PURE__*/_jsxs(\"div\",{className:\"card-text\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Legislation Risk: \",findCard(id).classification]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Risk:\",\" \",outputData.risk[cardIdToTitle[id]]||\"No choice made\"]})]}):/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:cardIdToTitle[id].replace(\"AI system designed for \",\"\")})},id);}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),\" \",/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:\"Least Acceptable\"})]}),/*#__PURE__*/_jsxs(FlipMove,{className:\"rankings-columns\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:\"Most Acceptable\"}),publicRankings?publicRankings.map(function(_ref6){var _ref7=_slicedToArray(_ref6,2),id=_ref7[0],rank=_ref7[1];return/*#__PURE__*/_jsx(\"div\",{className:\"card-ranking\",onClick:function onClick(){return openModal({id:id});},style:{borderColor:cardIdToColor[id],borderWidth:\".5vw\",borderStyle:\"solid\"},children:/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:cardIdToTitle[id].replace(\"AI system designed for \",\"\")})},id);}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:\"Least Acceptable\"})]})]})]});};export default Rankings;","map":{"version":3,"names":["React","useEffect","useState","axios","Button","FlipMove","Modal","chroma","jsx","_jsx","jsxs","_jsxs","setAppElement","Rankings","_ref","outputData","selectedCards","_useState","_useState2","_slicedToArray","rankings","setRankings","_useState3","_useState4","userRankings","setUserRankings","_useState5","_useState6","publicRankings","setPublicRankings","_useState7","type","value","_useState8","demographic","setDemographic","_useState9","_useState10","isModalOpen","setIsModalOpen","_useState11","_useState12","selectedCardData","setSelectedCardData","_useState13","_useState14","flippedCardId","setFlippedCardId","_useState15","_useState16","flippedCardIds","setFlippedCardIds","console","log","cardIds","map","card","ID","post","cards","demographics","then","response","sortedPublicRankings","Object","entries","data","ratings","sort","a","b","catch","error","K","forEach","wins","losses","ties","opponents","matchups","CardMatchups","matchup","Card1","Card2","Answer","winner","loser","numPlayers","length","i","playerA","j","playerB","totalGamesAgainstOpponent","winRatio","lossRatio","ratingDifference","expectedScore","pnorm","actualScore","delta","sortedUserRankings","x","mean","sd","upperTail","q","Math","atan","PI","_defineProperty","cardIdToTitle","title","colorScale","scale","mode","colors","cardIdToColor","_ref2","index","_ref3","id","openModal","cardData","matchingCard","find","closeModal","flipCard","prevFlippedCardIds","includes","filter","cardId","concat","_toConsumableArray","findCard","className","children","htmlFor","onChange","e","_objectSpread","target","_ref4","_ref5","rank","onClick","style","borderColor","borderWidth","borderStyle","classification","risk","replace","_ref6","_ref7"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/components/Rankings.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"./Button\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport \"./styles/Rankings.css\";\r\nimport chroma from \"chroma-js\";\r\nModal.setAppElement(\"#root\");\r\n\r\nconst Rankings = ({ outputData, selectedCards }) => {\r\n  const [rankings, setRankings] = useState(null);\r\n  const [userRankings, setUserRankings] = useState(null);\r\n  const [publicRankings, setPublicRankings] = useState(null);\r\n  const [demographic, setDemographic] = useState({ type: \"\", value: \"\" });\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedCardData, setSelectedCardData] = useState({});\r\n  const [flippedCardId, setFlippedCardId] = useState(null);\r\n  const [flippedCardIds, setFlippedCardIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"outputData changed:\", outputData);\r\n  }, [outputData]);\r\n\r\n  useEffect(() => {\r\n    const cardIds = selectedCards.map((card) => card.ID);\r\n\r\n    axios\r\n      .post(\"/data/rankings\", { cards: cardIds, demographics: demographic })\r\n      .then((response) => {\r\n        const sortedPublicRankings = Object.entries(response.data.ratings).sort(\r\n          (a, b) => b[1] - a[1]\r\n        );\r\n        setRankings(sortedPublicRankings);\r\n        setPublicRankings(sortedPublicRankings);\r\n        console.log(sortedPublicRankings);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let rankings = {};\r\n    let ratings = {};\r\n    const K = 40;\r\n    const cards = selectedCards.map((card) => card.ID);\r\n    // Initialize rankings object and ratings with player's cards\r\n    cards.forEach((card) => {\r\n      rankings[card] = { wins: 0, losses: 0, ties: 0, opponents: {} };\r\n      ratings[card] = 1800; // default rating\r\n    });\r\n\r\n    const matchups = outputData.CardMatchups;\r\n\r\n    // Iterate through all the matchups\r\n    matchups.forEach((matchup) => {\r\n      // Initialize the opponents\r\n      if (rankings[matchup.Card1] && rankings[matchup.Card2]) {\r\n        if (!rankings[matchup.Card1].opponents[matchup.Card2]) {\r\n          rankings[matchup.Card1].opponents[matchup.Card2] = {\r\n            wins: 0,\r\n            losses: 0,\r\n            ties: 0,\r\n          };\r\n        }\r\n\r\n        if (!rankings[matchup.Card2].opponents[matchup.Card1]) {\r\n          rankings[matchup.Card2].opponents[matchup.Card1] = {\r\n            wins: 0,\r\n            losses: 0,\r\n            ties: 0,\r\n          };\r\n        }\r\n\r\n        if (matchup.Answer === \"Skip\") {\r\n          // It's a tie\r\n          rankings[matchup.Card1].ties += 1;\r\n          rankings[matchup.Card2].ties += 1;\r\n          rankings[matchup.Card1].opponents[matchup.Card2].ties += 1;\r\n          rankings[matchup.Card2].opponents[matchup.Card1].ties += 1;\r\n        } else {\r\n          // There is a winner\r\n          const winner = matchup.Answer;\r\n          const loser =\r\n            winner === matchup.Card1 ? matchup.Card2 : matchup.Card1;\r\n\r\n          rankings[winner].wins += 1;\r\n          rankings[loser].losses += 1;\r\n\r\n          rankings[winner].opponents[loser].losses += 1;\r\n          rankings[loser].opponents[winner].wins += 1;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Calculate ratings using the relative logistic method\r\n    const numPlayers = cards.length;\r\n\r\n    for (let i = 0; i < numPlayers; i++) {\r\n      const playerA = cards[i];\r\n\r\n      for (let j = 0; j < numPlayers; j++) {\r\n        if (i !== j) {\r\n          const playerB = cards[j];\r\n\r\n          if (rankings[playerA].opponents[playerB]) {\r\n            const totalGamesAgainstOpponent =\r\n              rankings[playerA].opponents[playerB].wins +\r\n              rankings[playerA].opponents[playerB].losses +\r\n              rankings[playerA].opponents[playerB].ties;\r\n\r\n            const winRatio =\r\n              rankings[playerA].opponents[playerB].wins /\r\n              totalGamesAgainstOpponent;\r\n            const lossRatio =\r\n              rankings[playerA].opponents[playerB].losses /\r\n              totalGamesAgainstOpponent;\r\n\r\n            const ratingDifference = ratings[playerB] - ratings[playerA];\r\n            const expectedScore = pnorm(ratingDifference, 0, 2000 / 7, 1);\r\n            const actualScore =\r\n              winRatio +\r\n              (0.5 * rankings[playerA].opponents[playerB].ties) /\r\n                totalGamesAgainstOpponent;\r\n\r\n            const delta = K * (actualScore - expectedScore);\r\n            ratings[playerA] += delta;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const sortedUserRankings = Object.entries(ratings).sort(\r\n      (a, b) => b[1] - a[1]\r\n    );\r\n\r\n    setUserRankings(sortedUserRankings);\r\n  }, [outputData]);\r\n\r\n  function pnorm(x, mean, sd, upperTail) {\r\n    const q = (x - mean) / sd;\r\n    return upperTail\r\n      ? (1 - Math.atan(q) / Math.PI) * 0.5\r\n      : Math.atan(q) / Math.PI + 0.5;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Convert selected cards to an array of card IDs\r\n    const cardIds = selectedCards.map((card) => card.ID);\r\n\r\n    // Define the demographics\r\n    const demographics = {\r\n      [demographic.type]: demographic.value,\r\n    };\r\n\r\n    // Check if both type and value are set\r\n    if (demographic.type && demographic.value) {\r\n      // Send request to server\r\n      axios\r\n        .post(\"/data/rankings\", { cards: cardIds, demographics: demographics })\r\n        .then((response) => {\r\n          const sortedPublicRankings = Object.entries(\r\n            response.data.ratings\r\n          ).sort((a, b) => a[1] - b[1]);\r\n          setRankings(sortedPublicRankings);\r\n          setPublicRankings(sortedPublicRankings);\r\n          console.log(sortedPublicRankings);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    }\r\n  }, [selectedCards, demographic.type, demographic.value]);\r\n\r\n  const cardIdToTitle = {};\r\n  selectedCards.forEach((card) => {\r\n    cardIdToTitle[card.ID] = card.title;\r\n  });\r\n  // Create a color scale\r\n  const colorScale = chroma\r\n    .scale([\"#9780FF\", \"#ff5c97\"])\r\n    .mode(\"lch\")\r\n    .colors(userRankings ? userRankings.length : 0);\r\n\r\n  const cardIdToColor = {};\r\n  if (userRankings) {\r\n    userRankings.forEach(([id], index) => {\r\n      cardIdToColor[id] = colorScale[index];\r\n    });\r\n  }\r\n\r\n  const openModal = (cardData) => {\r\n    const matchingCard = selectedCards.find((card) => card.ID === cardData.id);\r\n    console.log(outputData);\r\n    setSelectedCardData(matchingCard);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const flipCard = (id) => {\r\n    setFlippedCardIds((prevFlippedCardIds) => {\r\n      if (prevFlippedCardIds.includes(id)) {\r\n        return prevFlippedCardIds.filter((cardId) => cardId !== id);\r\n      } else {\r\n        return [...prevFlippedCardIds, id];\r\n      }\r\n    });\r\n  };\r\n\r\n  const findCard = (id) => {\r\n    const matchingCard = selectedCards.find((card) => card.ID === id);\r\n    return matchingCard;\r\n  };\r\n\r\n  return (\r\n    <div className=\"rankings\">\r\n      <div className=\"rankings-header\">\r\n        <h1>Results</h1>\r\n        <h3>\r\n          Explore your game results and see how you compare with others. See how\r\n          you ranked the technologies and how it matches up to others. Click any\r\n          card in Your Rankings to find out the risk level!\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"middle-rankings\">\r\n        <div className=\"middle-rankings-single-column\">\r\n          <div className=\"middle-rankings-columns\">\r\n            <div className=\"demographic-selection\">\r\n              <label htmlFor=\"demographicType\"></label>\r\n              <select\r\n                className=\"rankings-selection\"\r\n                id=\"demographicType\"\r\n                value={demographic.type}\r\n                onChange={(e) =>\r\n                  setDemographic({\r\n                    ...demographic,\r\n                    type: e.target.value,\r\n                    value: \"\",\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"\">Select Demographic Type</option>\r\n\r\n                <option value=\"Gender\">Gender</option>\r\n                <option value=\"Age\">Age</option>\r\n                <option value=\"Race\">Race</option>\r\n                <option value=\"Education\">Education Level</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"middle-rankings-columns\">\r\n            {demographic.type && (\r\n              <div className=\"demographic-selection\">\r\n                <label htmlFor=\"demographicValue\"></label>\r\n                {demographic.type === \"Gender\" && (\r\n                  <select\r\n                    className=\"rankings-selection\"\r\n                    id=\"demographicValue\"\r\n                    value={demographic.value}\r\n                    onChange={(e) =>\r\n                      setDemographic({ ...demographic, value: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select Gender</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Non-binary\">Non-binary/ third gender</option>\r\n                    <option value=\"Other\">Other</option>\r\n                    <option value=\"Prefer not to say\">Prefer not to say</option>\r\n                  </select>\r\n                )}\r\n                {demographic.type === \"Race\" && (\r\n                  <select\r\n                    className=\"rankings-selection\"\r\n                    id=\"demographicValue\"\r\n                    value={demographic.value}\r\n                    onChange={(e) =>\r\n                      setDemographic({ ...demographic, value: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select Race</option>\r\n                    <option value=\"White\">White</option>\r\n                    <option value=\"Black\">Black</option>\r\n                    <option value=\"Asian\">Asian</option>\r\n                    <option value=\"Hispanic\">Hispanic</option>\r\n                    <option value=\"Mixed\">Mixed</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                )}\r\n                {demographic.type === \"Age\" && (\r\n                  <select\r\n                    className=\"rankings-selection\"\r\n                    id=\"demographicValue\"\r\n                    value={demographic.value}\r\n                    onChange={(e) =>\r\n                      setDemographic({ ...demographic, value: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select Age</option>\r\n                    <option value=\"<18\">Under 18</option>\r\n                    <option value=\"18-24\">18-24</option>\r\n                    <option value=\"25-34\">25-34</option>\r\n                    <option value=\"35-44\">35-44</option>\r\n                    <option value=\"45-54\">45-54</option>\r\n                    <option value=\"55-64\">55-64</option>\r\n                    <option value=\"65+\">65+</option>\r\n                  </select>\r\n                )}\r\n\r\n                {demographic.type === \"Education\" && (\r\n                  <select\r\n                    className=\"rankings-selection\"\r\n                    id=\"demographicValue\"\r\n                    value={demographic.value}\r\n                    onChange={(e) =>\r\n                      setDemographic({ ...demographic, value: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select Education Level</option>\r\n                    <option value=\"High School\">High School</option>\r\n                    <option value=\"Bachelors\">Bachelors</option>\r\n                    <option value=\"Masters\">Masters</option>\r\n                    <option value=\"PhD\">PhD</option>\r\n                  </select>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"top-rankings\">\r\n          <div className=\"top-rankings-columns\">\r\n            <h3>Your Rankings</h3>\r\n          </div>\r\n          <div className=\"top-rankings-columns\">\r\n            <h3>Public Rankings</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom-rankings\">\r\n        <div className=\"rankings-columns\">\r\n          <p className=\"card-text\">Most Acceptable</p>\r\n          {userRankings ? (\r\n            userRankings.map(([id, rank]) => (\r\n              <div\r\n                className={`card-ranking ${\r\n                  flippedCardIds.includes(id) ? \"flipped\" : \"\"\r\n                }`}\r\n                key={id}\r\n                onClick={() => flipCard(id)}\r\n                style={{\r\n                  borderColor: cardIdToColor[id],\r\n                  borderWidth: \".5vw\",\r\n                  borderStyle: \"solid\",\r\n                }}\r\n              >\r\n                {flippedCardIds.includes(id) ? (\r\n                  <div className=\"card-text\">\r\n                    <p>Legislation Risk: {findCard(id).classification}</p>\r\n                    <p>\r\n                      Your Risk:{\" \"}\r\n                      {outputData.risk[cardIdToTitle[id]] || \"No choice made\"}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"card-text\">\r\n                    {cardIdToTitle[id].replace(\"AI system designed for \", \"\")}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}{\" \"}\r\n          <p className=\"card-text\">Least Acceptable</p>\r\n        </div>\r\n        <FlipMove className=\"rankings-columns\">\r\n          <p className=\"card-text\">Most Acceptable</p>\r\n\r\n          {publicRankings ? (\r\n            publicRankings.map(([id, rank]) => (\r\n              <div\r\n                className=\"card-ranking\"\r\n                key={id}\r\n                onClick={() => openModal({ id })}\r\n                style={{\r\n                  borderColor: cardIdToColor[id],\r\n                  borderWidth: \".5vw\",\r\n                  borderStyle: \"solid\",\r\n                }}\r\n              >\r\n                <p className=\"card-text\">\r\n                  {cardIdToTitle[id].replace(\"AI system designed for \", \"\")}\r\n                </p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Loading...</p>\r\n          )}\r\n\r\n          <p className=\"card-text\">Least Acceptable</p>\r\n        </FlipMove>\r\n      </div>\r\n      {/* <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Card Information\"\r\n        // className=\"my-modal\"\r\n        // overlayClassName=\"my-modal-overlay\"\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n          },\r\n          content: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"60vw\",\r\n            height: \"70vh\",\r\n            borderRadius: \"1em\",\r\n          },\r\n        }}\r\n      >\r\n        <h2 className=\"modal-title\">Title: {selectedCardData.title}</h2>\r\n        <p className=\"modal-text\">\r\n          <b>Legislation text:</b> {selectedCardData.reference}\r\n        </p>\r\n        <p className=\"modal-text\">\r\n          {\" \"}\r\n          <b>Risk Assigned:</b> {selectedCardData.classification}\r\n        </p>\r\n        <p className=\"modal-text\">\r\n          <b>Your Risk Score: </b>\r\n          {outputData.risk[selectedCardData.title] || \"No choice made\"}\r\n        </p>\r\n        <button className=\"modal-close-btn\" onClick={closeModal}>\r\n          X\r\n        </button>\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rankings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}