{"ast":null,"code":"import React from\"react\";import Button from\"./Button\";import\"./styles/Rankings.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Rankings=function Rankings(_ref){var rankings=_ref.rankings,finishGame=_ref.finishGame;var qScores={};for(var tech in rankings){var w=rankings[tech].wins;var l=rankings[tech].losses;var t=rankings[tech].ties;var total=w+l+t;// If the technology hasn't been compared with any other, assign Q-score as 0\nif(total===0){qScores[tech]=0;continue;}var W=w/total;var L=l/total;// Calculate opponent Q-scores\nvar opponentW=0;var opponentL=0;var opponentCount=0;for(var opponent in rankings[tech].opponents){var oppStats=rankings[opponent];var oppTotal=oppStats.wins+oppStats.losses+oppStats.ties;if(oppTotal!==0){var relationship=rankings[tech].opponents[opponent];if(relationship>0){// current tech has won against opponent\nopponentW+=oppStats.wins/oppTotal;}else if(relationship<0){// current tech has lost against opponent\nopponentL+=oppStats.losses/oppTotal;}opponentCount++;}}// If the technology has opponents, average the Q-scores\nif(opponentCount!==0){opponentW/=opponentCount;opponentL/=opponentCount;}// Calculate Q-score\nvar qScore=10/3*(W+opponentW-L-opponentL+1);qScores[tech]=qScore;}var sortedRankings=Object.keys(qScores).sort(function(a,b){return qScores[b]-qScores[a];});return/*#__PURE__*/_jsxs(\"div\",{className:\"rankings\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Ranking\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Most Acceptable\"}),/*#__PURE__*/_jsx(\"ol\",{children:sortedRankings.map(function(tech,idx){return/*#__PURE__*/_jsx(\"li\",{children:tech},idx);})}),/*#__PURE__*/_jsx(\"h4\",{children:\"Least Acceptable\"}),/*#__PURE__*/_jsx(Button,{text:\"Finish Game\",onClick:finishGame})]});};export default Rankings;","map":{"version":3,"names":["React","Button","jsx","_jsx","jsxs","_jsxs","Rankings","_ref","rankings","finishGame","qScores","tech","w","wins","l","losses","t","ties","total","W","L","opponentW","opponentL","opponentCount","opponent","opponents","oppStats","oppTotal","relationship","qScore","sortedRankings","Object","keys","sort","a","b","className","children","map","idx","text","onClick"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/components/Rankings.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./styles/Rankings.css\";\r\n\r\nconst Rankings = ({ rankings, finishGame }) => {\r\n  let qScores = {};\r\n\r\n  for (let tech in rankings) {\r\n    let w = rankings[tech].wins;\r\n    let l = rankings[tech].losses;\r\n    let t = rankings[tech].ties;\r\n    let total = w + l + t;\r\n\r\n    // If the technology hasn't been compared with any other, assign Q-score as 0\r\n    if (total === 0) {\r\n      qScores[tech] = 0;\r\n      continue;\r\n    }\r\n\r\n    let W = w / total;\r\n    let L = l / total;\r\n\r\n    // Calculate opponent Q-scores\r\n    let opponentW = 0;\r\n    let opponentL = 0;\r\n    let opponentCount = 0;\r\n\r\n    for (let opponent in rankings[tech].opponents) {\r\n      let oppStats = rankings[opponent];\r\n      let oppTotal = oppStats.wins + oppStats.losses + oppStats.ties;\r\n\r\n      if (oppTotal !== 0) {\r\n        let relationship = rankings[tech].opponents[opponent];\r\n\r\n        if (relationship > 0) {\r\n          // current tech has won against opponent\r\n          opponentW += oppStats.wins / oppTotal;\r\n        } else if (relationship < 0) {\r\n          // current tech has lost against opponent\r\n          opponentL += oppStats.losses / oppTotal;\r\n        }\r\n\r\n        opponentCount++;\r\n      }\r\n    }\r\n\r\n    // If the technology has opponents, average the Q-scores\r\n    if (opponentCount !== 0) {\r\n      opponentW /= opponentCount;\r\n      opponentL /= opponentCount;\r\n    }\r\n\r\n    // Calculate Q-score\r\n    let qScore = (10 / 3) * (W + opponentW - L - opponentL + 1);\r\n\r\n    qScores[tech] = qScore;\r\n  }\r\n\r\n  const sortedRankings = Object.keys(qScores).sort(\r\n    (a, b) => qScores[b] - qScores[a]\r\n  );\r\n\r\n  return (\r\n    <div className=\"rankings\">\r\n      <h1>Ranking</h1>\r\n      <h4>Most Acceptable</h4>\r\n      <ol>\r\n        {sortedRankings.map((tech, idx) => (\r\n          <li key={idx}>{tech}</li>\r\n        ))}\r\n      </ol>\r\n      <h4>Least Acceptable</h4>\r\n      <Button text=\"Finish Game\" onClick={finishGame} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rankings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}