{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lpana\\\\OneDrive\\\\Documents\\\\gameIterations\\\\scoreUpdate\\\\src\\\\components\\\\ScoreBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSpring, animated as a } from \"react-spring\";\nimport \"./styles/ScoreBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreBar = _ref => {\n  _s();\n  let {\n    score\n  } = _ref;\n  const [previousScore, setPreviousScore] = useState(score);\n  const [scoreChange, setScoreChange] = useState(0);\n  const [displayChange, setDisplayChange] = useState(false);\n  useEffect(() => {\n    setScoreChange(score - previousScore);\n    setPreviousScore(score);\n    setDisplayChange(true);\n    const timeout = setTimeout(() => setDisplayChange(false), 1000); // hide score change after 1 second\n    return () => clearTimeout(timeout);\n  }, [score]);\n  const barProps = useSpring({\n    backgroundColor: displayChange ? \"#88E4E4\" : \"#ccc\",\n    config: {\n      tension: 210,\n      friction: 20\n    }\n  });\n  const scoreChangeProps = useSpring({\n    opacity: displayChange ? 1 : 0,\n    transform: displayChange ? \"translateY(0)\" : \"translateY(-20px)\",\n    config: {\n      tension: 210,\n      friction: 20\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(a.div, {\n    style: barProps,\n    className: \"score-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), displayChange && /*#__PURE__*/_jsxDEV(a.div, {\n      style: scoreChangeProps,\n      className: \"score-change\",\n      children: [scoreChange > 0 ? \"+\" : \"\", scoreChange]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreBar, \"BStuZathuk7OQc5cWMgJeZmM0II=\", false, function () {\n  return [useSpring, useSpring];\n});\n_c = ScoreBar;\nexport default ScoreBar;\nvar _c;\n$RefreshReg$(_c, \"ScoreBar\");","map":{"version":3,"names":["React","useState","useEffect","useSpring","animated","a","jsxDEV","_jsxDEV","ScoreBar","_ref","_s","score","previousScore","setPreviousScore","scoreChange","setScoreChange","displayChange","setDisplayChange","timeout","setTimeout","clearTimeout","barProps","backgroundColor","config","tension","friction","scoreChangeProps","opacity","transform","div","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/components/ScoreBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSpring, animated as a } from \"react-spring\";\r\nimport \"./styles/ScoreBar.css\";\r\n\r\nconst ScoreBar = ({ score }) => {\r\n  const [previousScore, setPreviousScore] = useState(score);\r\n  const [scoreChange, setScoreChange] = useState(0);\r\n  const [displayChange, setDisplayChange] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setScoreChange(score - previousScore);\r\n    setPreviousScore(score);\r\n    setDisplayChange(true);\r\n    const timeout = setTimeout(() => setDisplayChange(false), 1000); // hide score change after 1 second\r\n    return () => clearTimeout(timeout);\r\n  }, [score]);\r\n\r\n  const barProps = useSpring({\r\n    backgroundColor: displayChange ? \"#88E4E4\" : \"#ccc\",\r\n    config: { tension: 210, friction: 20 },\r\n  });\r\n\r\n  const scoreChangeProps = useSpring({\r\n    opacity: displayChange ? 1 : 0,\r\n    transform: displayChange ? \"translateY(0)\" : \"translateY(-20px)\",\r\n    config: { tension: 210, friction: 20 },\r\n  });\r\n\r\n  return (\r\n    <a.div style={barProps} className=\"score-bar\">\r\n      <span>Score: {score}</span>\r\n      {displayChange && (\r\n        <a.div style={scoreChangeProps} className=\"score-change\">\r\n          {scoreChange > 0 ? \"+\" : \"\"}\r\n          {scoreChange}\r\n        </a.div>\r\n      )}\r\n    </a.div>\r\n  );\r\n};\r\n\r\nexport default ScoreBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,QAAQ,IAAIC,CAAC,QAAQ,cAAc;AACvD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACzB,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACU,KAAK,CAAC;EACzD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACda,cAAc,CAACJ,KAAK,GAAGC,aAAa,CAAC;IACrCC,gBAAgB,CAACF,KAAK,CAAC;IACvBM,gBAAgB,CAAC,IAAI,CAAC;IACtB,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAMF,gBAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACjE,OAAO,MAAMG,YAAY,CAACF,OAAO,CAAC;EACpC,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMU,QAAQ,GAAGlB,SAAS,CAAC;IACzBmB,eAAe,EAAEN,aAAa,GAAG,SAAS,GAAG,MAAM;IACnDO,MAAM,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG;EACvC,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGvB,SAAS,CAAC;IACjCwB,OAAO,EAAEX,aAAa,GAAG,CAAC,GAAG,CAAC;IAC9BY,SAAS,EAAEZ,aAAa,GAAG,eAAe,GAAG,mBAAmB;IAChEO,MAAM,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG;EACvC,CAAC,CAAC;EAEF,oBACElB,OAAA,CAACF,CAAC,CAACwB,GAAG;IAACC,KAAK,EAAET,QAAS;IAACU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC3CzB,OAAA;MAAAyB,QAAA,GAAM,SAAO,EAACrB,KAAK;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC1BpB,aAAa,iBACZT,OAAA,CAACF,CAAC,CAACwB,GAAG;MAACC,KAAK,EAAEJ,gBAAiB;MAACK,SAAS,EAAC,cAAc;MAAAC,QAAA,GACrDlB,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAC1BA,WAAW;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ,CAAC;AAAC1B,EAAA,CAnCIF,QAAQ;EAAA,QAaKL,SAAS,EAKDA,SAAS;AAAA;AAAAkC,EAAA,GAlB9B7B,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}