{"ast":null,"code":"import _toConsumableArray from\"C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useEffect,useRef}from\"react\";import*as d3 from\"d3\";import{jsx as _jsx}from\"react/jsx-runtime\";var data={0:{low_score:0,average_score:0,high_score:49},1:{low_score:0,average_score:19,high_score:49},2:{low_score:0,average_score:38,high_score:98},3:{low_score:0,average_score:55,high_score:147},4:{low_score:0,average_score:70,high_score:179},5:{low_score:0,average_score:85,high_score:228},6:{low_score:0,average_score:102,high_score:272}};var maxHighScore=Math.max.apply(Math,_toConsumableArray(Object.values(data).map(function(d){return d.high_score;})));function ScoreLine(_ref){var userScore=_ref.userScore,stage=_ref.stage;var ref=useRef();console.log(userScore,stage);useEffect(function(){var svg=d3.select(ref.current);var svgWidth=+svg.node().getBoundingClientRect().width;var score=data[stage];var xScale=d3.scaleLinear().domain([0,score.high_score]).range([0,svgWidth]);var colorScale=d3.scaleLinear().domain([0,maxHighScore]).range([\"blue\",\"red\"]);// If it's the first time, add all elements. If not, only update necessary ones.\nif(svg.select(\"line\").empty()){// Add line for current stage\nsvg.append(\"line\").attr(\"x1\",xScale(0))// low end of the line always at 0\n.attr(\"x2\",xScale(maxHighScore))// high end of the line always at max high score\n.attr(\"y1\",50).attr(\"y2\",50).attr(\"stroke\",colorScale(score.average_score)).attr(\"stroke-width\",2);// Add vertical line for average\nsvg.append(\"line\").attr(\"class\",\"avg-line\").attr(\"x1\",xScale(score.average_score)).attr(\"x2\",xScale(score.average_score)).attr(\"y1\",40).attr(\"y2\",60).attr(\"stroke\",\"black\").attr(\"stroke-width\",1);// Add circle for user score\nsvg.append(\"circle\").attr(\"class\",\"user-circle\").attr(\"cx\",xScale(userScore)).attr(\"cy\",50).attr(\"r\",5).attr(\"fill\",\"green\");// Add text for low, average, high\nsvg.append(\"text\").attr(\"class\",\"low-text\").attr(\"x\",0).attr(\"y\",80).text(\"Low\");svg.append(\"text\").attr(\"class\",\"avg-text\").attr(\"x\",xScale(score.average_score)).attr(\"y\",80).text(\"Avg\");svg.append(\"text\").attr(\"class\",\"high-text\").attr(\"x\",svgWidth).attr(\"y\",80).attr(\"style\",\"text-anchor: end;\").text(\"High\");}// Update elements\nsvg.select(\"line\").attr(\"stroke\",colorScale(score.average_score));svg.select(\".user-circle\").transition().duration(1000).attr(\"cx\",xScale(userScore));svg.select(\".avg-line\").transition().duration(1000).attr(\"x1\",xScale(score.average_score)).attr(\"x2\",xScale(score.average_score));svg.select(\".avg-text\").attr(\"x\",xScale(score.average_score)).text(\"Avg\");},[userScore,stage]);return/*#__PURE__*/_jsx(\"svg\",{ref:ref,style:{width:\"100%\",height:\"200px\"}});}export default ScoreLine;","map":{"version":3,"names":["React","useEffect","useRef","d3","jsx","_jsx","data","low_score","average_score","high_score","maxHighScore","Math","max","apply","_toConsumableArray","Object","values","map","d","ScoreLine","_ref","userScore","stage","ref","console","log","svg","select","current","svgWidth","node","getBoundingClientRect","width","score","xScale","scaleLinear","domain","range","colorScale","empty","append","attr","text","transition","duration","style","height"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/components/ScoreLine.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst data = {\r\n  0: { low_score: 0, average_score: 0, high_score: 49 },\r\n  1: { low_score: 0, average_score: 19, high_score: 49 },\r\n  2: { low_score: 0, average_score: 38, high_score: 98 },\r\n  3: { low_score: 0, average_score: 55, high_score: 147 },\r\n  4: { low_score: 0, average_score: 70, high_score: 179 },\r\n  5: { low_score: 0, average_score: 85, high_score: 228 },\r\n  6: { low_score: 0, average_score: 102, high_score: 272 },\r\n};\r\n\r\nconst maxHighScore = Math.max(...Object.values(data).map((d) => d.high_score));\r\n\r\nfunction ScoreLine({ userScore, stage }) {\r\n  const ref = useRef();\r\n  console.log(userScore, stage);\r\n  useEffect(() => {\r\n    const svg = d3.select(ref.current);\r\n    const svgWidth = +svg.node().getBoundingClientRect().width;\r\n    const score = data[stage];\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, score.high_score])\r\n      .range([0, svgWidth]);\r\n    const colorScale = d3\r\n      .scaleLinear()\r\n      .domain([0, maxHighScore])\r\n      .range([\"blue\", \"red\"]);\r\n\r\n    // If it's the first time, add all elements. If not, only update necessary ones.\r\n    if (svg.select(\"line\").empty()) {\r\n      // Add line for current stage\r\n      svg\r\n        .append(\"line\")\r\n        .attr(\"x1\", xScale(0)) // low end of the line always at 0\r\n        .attr(\"x2\", xScale(maxHighScore)) // high end of the line always at max high score\r\n        .attr(\"y1\", 50)\r\n        .attr(\"y2\", 50)\r\n        .attr(\"stroke\", colorScale(score.average_score))\r\n        .attr(\"stroke-width\", 2);\r\n\r\n      // Add vertical line for average\r\n      svg\r\n        .append(\"line\")\r\n        .attr(\"class\", \"avg-line\")\r\n        .attr(\"x1\", xScale(score.average_score))\r\n        .attr(\"x2\", xScale(score.average_score))\r\n        .attr(\"y1\", 40)\r\n        .attr(\"y2\", 60)\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"stroke-width\", 1);\r\n\r\n      // Add circle for user score\r\n      svg\r\n        .append(\"circle\")\r\n        .attr(\"class\", \"user-circle\")\r\n        .attr(\"cx\", xScale(userScore))\r\n        .attr(\"cy\", 50)\r\n        .attr(\"r\", 5)\r\n        .attr(\"fill\", \"green\");\r\n\r\n      // Add text for low, average, high\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"class\", \"low-text\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", 80)\r\n        .text(\"Low\");\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"class\", \"avg-text\")\r\n        .attr(\"x\", xScale(score.average_score))\r\n        .attr(\"y\", 80)\r\n        .text(\"Avg\");\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"class\", \"high-text\")\r\n        .attr(\"x\", svgWidth)\r\n        .attr(\"y\", 80)\r\n        .attr(\"style\", \"text-anchor: end;\")\r\n        .text(\"High\");\r\n    }\r\n\r\n    // Update elements\r\n    svg.select(\"line\").attr(\"stroke\", colorScale(score.average_score));\r\n    svg\r\n      .select(\".user-circle\")\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"cx\", xScale(userScore));\r\n    svg\r\n      .select(\".avg-line\")\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"x1\", xScale(score.average_score))\r\n      .attr(\"x2\", xScale(score.average_score));\r\n    svg.select(\".avg-text\").attr(\"x\", xScale(score.average_score)).text(\"Avg\");\r\n  }, [userScore, stage]);\r\n\r\n  return <svg ref={ref} style={{ width: \"100%\", height: \"200px\" }} />;\r\n}\r\n\r\nexport default ScoreLine;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}