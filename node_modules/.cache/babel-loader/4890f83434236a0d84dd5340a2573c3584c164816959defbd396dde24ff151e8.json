{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lpana\\\\OneDrive\\\\Documents\\\\gameIterations\\\\scoreUpdate\\\\src\\\\pages\\\\ResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsPage = _ref => {\n  _s();\n  let {\n    onRestartGame,\n    outputData,\n    selectedCards\n  } = _ref;\n  const [rankings, setRankings] = useState(null);\n  useEffect(() => {\n    // Convert selected cards to an array of card IDs\n    const cardIds = selectedCards.map(card => card.ID);\n\n    // Define the demographics\n    const demographics = {\n      Race: \"White\"\n    };\n\n    // Send request to server\n    fetch(\"/data/rankings\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cards: cardIds,\n        demographics: demographics\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setRankings(data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }, [selectedCards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRestartGame,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsPage, \"slpVq7mU8bslm7kXMD4idVIheYQ=\");\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ResultsPage","_ref","_s","onRestartGame","outputData","selectedCards","rankings","setRankings","cardIds","map","card","ID","demographics","Race","fetch","method","headers","body","JSON","stringify","cards","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lpana/OneDrive/Documents/gameIterations/scoreUpdate/src/pages/ResultsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ResultsPage = ({ onRestartGame, outputData, selectedCards }) => {\r\n  const [rankings, setRankings] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Convert selected cards to an array of card IDs\r\n    const cardIds = selectedCards.map((card) => card.ID);\r\n\r\n    // Define the demographics\r\n    const demographics = { Race: \"White\" };\r\n\r\n    // Send request to server\r\n    fetch(\"/data/rankings\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ cards: cardIds, demographics: demographics }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setRankings(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }, [selectedCards]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Results</h1>\r\n      <button onClick={onRestartGame}>Restart Game</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGC,IAAA,IAAkD;EAAAC,EAAA;EAAA,IAAjD;IAAEC,aAAa;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAJ,IAAA;EAC/D,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,OAAO,GAAGH,aAAa,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;;IAEpD;IACA,MAAMC,YAAY,GAAG;MAAEC,IAAI,EAAE;IAAQ,CAAC;;IAEtC;IACAC,KAAK,CAAC,gBAAgB,EAAE;MACtBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEZ,OAAO;QAAEI,YAAY,EAAEA;MAAa,CAAC;IACrE,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBjB,WAAW,CAACiB,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,CAACvB,aAAa,CAAC,CAAC;EAEnB,oBACEN,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBlC,OAAA;MAAQmC,OAAO,EAAE/B,aAAc;MAAA0B,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlCIF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}